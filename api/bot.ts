require("dotenv").config()
import { Bot, InlineKeyboard, webhookCallback } from "grammy"
const { createClient } = require("@supabase/supabase-js")

const supabaseUrl = process.env.SUPABASE_URL
const supabaseKey = process.env.SUPABASE_ANON_KEY
const supabase = createClient(supabaseUrl, supabaseKey)

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞
const adminId = 5522146122
const groupId = -1002037839412

const token = process.env.TOKEN
if (!token) throw new Error("TOKEN is unset")

const bot = new Bot(token)

const categoryTexts = {
	life: `
  *–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ê–ª–∫–æ–≥–æ–ª–∏–∫–∏* üóì 10 –∏—é–Ω—è 1935 –≥–æ–¥–∞

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ù–∞—Ä–∫–æ–º–∞–Ω—ã* üóì 5 –æ–∫—Ç—è–±—Ä—è 1953 –≥–æ–¥–∞

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ù–∏–∫–æ—Ç–∏–Ω–æ–∑–∞–≤–∏—Å–∏–º—ã–µ* üóì 1982 –≥–æ–¥—É

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –•–∏–º–∏—á–µ—Å–∫–∏–µ –ó–∞–≤–∏—Å–∏–º—ã–µ* üóì –ø–µ—Ä–≤–∞—è –≥—Ä—É–ø–ø–∞ 1997 –≥–æ–¥

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –¢–∞–±–ª–µ—Ç–æ—á–Ω–∏–∫–∏* üóì –æ—Å–Ω–æ–≤–∞–Ω–∞ –≤ 1972 –≥–æ–¥—É
_(–õ—é–¥–∏ –∏—â—É—â–∏–µ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–µ –æ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ—Ü–µ–ø—Ç—É—Ä–Ω—ã—Ö –ª–µ–∫–∞—Ä—Å—Ç–≤)_

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ö–æ–∫–∞–∏–Ω–∏—Å—Ç—ã* üóì –≤ 1982 –≥–æ–¥—É

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ê–¥—Ä–µ–Ω–∞–ª–∏–Ω–æ–≤—ã–µ –ù–∞—Ä–∫–æ–º–∞–Ω—ã*`,
	moms: `
*–ê–ª-–ê–Ω–æ–Ω* üóì 1951 –≥–æ–¥

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –°–æ–∑–∞–≤–∏—Å–∏–º—ã–µ*

*–ê–ª–∞—Ç–∏–Ω* üóì 1951 –≥–æ–¥
_(–ê–ª–∞—Ç–∏–Ω ‚Äì —ç—Ç–æ —Ç–æ—á–Ω–æ —Ç–∞–∫–æ–π –∂–µ –ê–ª-–ê–Ω–æ–Ω, —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–µ—Ç–µ–π –∏ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤ –∏–∑ —Å–µ–º–µ–π, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∏–ª–∏ –±—ã–ª–∏ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã.)_

*–ù–∞—Ä-–ê–Ω–æ–Ω* üóì 1971 –≥–æ–¥

*–ò-–ê–Ω–æ–Ω*
_(–ò-–ê–Ω–æ–Ω - —ç—Ç–æ –æ–±—â–µ—Å—Ç–≤–æ –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω, –Ω–∞ —á—å–∏ –∂–∏–∑–Ω–∏ –≤–ª–∏—è–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞ –∏–≥—Ä–æ–º–∞–Ω–∏–∏ –±–ª–∏–∑–∫–∏—Ö.)_

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –°–µ–º—å–∏ –•–∏–º–∏—á–µ—Å–∫–∏ –ó–∞–≤–∏—Å–∏–º—ã—Ö*
    `,
	eda: `
*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ü–µ—Ä–µ–µ–¥–∞—é—â–∏–µ* üóì 1960 –≥–æ–¥–∞

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ö–æ–º–ø—É–ª—å—Å–∏–≤–Ω–æ –ü–µ—Ä–µ–µ–¥–∞—é—â–∏–µ* 

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ —Å –†–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º –ü–∏—â–µ–≤–æ–≥–æ –ü–æ–≤–µ–¥–µ–Ω–∏—è* 
    `,
	work: `
  *–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ü—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ç–æ—Ä—ã* 

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –¢—Ä—É–¥–æ–≥–æ–ª–∏–∫–∏* üóì 1983 –≥–æ–¥—É 
  `,
	money: `
  *–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –î–æ–ª–∂–Ω–∏–∫–∏* üóì 1971

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ù–µ–¥–æ–∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–µ* 

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ë–∏–∑–Ω–µ—Å –î–æ–ª–∂–Ω–∏–∫–∏*
  `,
	soul: `
*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—ã*

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –î–µ–ø—Ä–µ—Å—Å–∏–≤–Ω—ã–µ*`,
	sex: `
  *–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –°–µ–∫—Å–æ–≥–æ–ª–∏–∫–∏* üóì 1979 –≥–æ–¥—É

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –õ—é–±–æ–≤–Ω–æ–∑–∞–≤–∏—Å–∏–º—ã–µ* üóì 1976 –≥–æ–¥—É

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –°–µ–∫—Å—É–∞–ª—å–Ω–æ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â–∏–µ* üóì 1993 –≥–æ–¥—É

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –°–µ–∫—Å—É–∞–ª—å–Ω—ã–µ –ö–æ–º–ø—É–ª—å—Å–∏–≤–Ω—ã–µ –õ–∏—á–Ω–æ—Å—Ç–∏* üóì 1982 –≥–æ–¥—É
  `,
	world: `
  *–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –ó–∞–≤–∏—Å–∏–º—ã–µ*

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –ò–≥—Ä–æ–∫–∏*

*–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ú–µ–¥–∏—è –ó–∞–≤–∏—Å–∏–º—ã–µ*
`,
	azart: `
  *–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –ò–≥—Ä–æ–∫–∏* üóì 1957 –≥–æ–¥—É
  `,
	tra: `
  *–í–∑—Ä–æ—Å–ª—ã—Ö –î–µ—Ç–µ–π –∏–∑ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö/ –î–∏—Å—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–µ–º–µ–π* üóì 1978 –≥–æ–¥—É
  `,
	art: `
  *–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –•—É–¥–æ–∂–Ω–∏–∫–∏* üóì 1985 –≥–æ–¥—É
  `,
	dream: `
  *–ê–Ω–æ–Ω–∏–º–Ω—ã—Ö –î–µ–π–¥—Ä–∏–º–µ—Ä–æ–≤* üóì 2008 –≥–æ–¥—É
  `,
	bol: `
  *–ê–Ω–æ–Ω–∏–º–Ω—ã–µ –û–Ω–≥–æ–ª–∏–∫–∏*
  `,
}

function buildMainMenuKeyboard() {
	return new InlineKeyboard()
		.text("üçæ –í–µ—â–µ—Å—Ç–≤–∞", "life")
		.row()
		.text("ü´Ç –†–æ–¥—Å—Ç–≤–µ–Ω–∏–∫–∞–º", "moms")
		.text("üßí –¢—Ä–∞–≤–º—ã", "tra")
		.row()
		.text("üôè –ë–æ–ª–µ–∑–Ω–∏", "bol")
		.text("üéÇ –ü–µ—Ä–µ–µ–¥–∞–Ω–∏–µ", "eda")
		.text("üíº –†–∞–±–æ—Ç–∞", "work")
		.row()
		.text("üí∂ –î–µ–Ω—å–≥–∏", "money")
		.text("üé≠ –≠–º–æ—Ü–∏–∏", "soul")
		.text("‚ù§Ô∏è –û—Ç–Ω–æ—à–µ–Ω–∏—è", "sex")
		.row()
		.text("üåê –ò–Ω—Ç–µ—Ä–Ω–µ—Ç", "world")
		.text("üé≤ –ê–∑–∞—Ä—Ç", "azart")
		.text("üåÖ –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ", "art")
		.row()
		.text("üéÜ –ú–µ—á—Ç–∞—Ç–µ–ª–∏", "dream")
}

const mainMsg = `
–ë–æ–ª–µ–µ 60 –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö *12-—Ç–∏ —à–∞–≥–æ–≤—ã—Ö* —Å–æ–æ–±—â–µ—Å—Ç–≤.
[–°—Å—ã–ª–∫–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã —ç—Ç–∏—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤](https://t.me/all12_contacts)
`

bot.command("start", ctx => {
	const keyboard = buildMainMenuKeyboard()
	ctx.reply(mainMsg, {
		reply_markup: keyboard,
		parse_mode: "Markdown",
	})
})

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
// bot.on("message:text", async ctx => {
// 	const messageText = ctx.message.text
// 	const fromUserId = ctx.message.from.id

// 	// –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
// 	const inlineKeyboard = new InlineKeyboard()
// 		.text("–î–∞, –ø—Ä–∏–Ω—è—Ç—å", `accept_${fromUserId}`)
// 		.text("–ù–µ—Ç, –æ—Ç–∫–∞–∑", `reject_${fromUserId}`)

// 	// –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
// 	await ctx.api.sendMessage(
// 		adminId,
// 		`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${fromUserId}: ${messageText}`,
// 		{
// 			reply_markup: inlineKeyboard,
// 		},
// 	)
// })



bot.on("message:text", async ctx => {
	const messageText = ctx.message.text
	const fromUserId = ctx.message.from.id

	// –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
	const inlineKeyboard = new InlineKeyboard()
		.text("–î–∞, –ø—Ä–∏–Ω—è—Ç—å", `accept_${fromUserId}`)
		.row() // –î–æ–±–∞–≤–ª—è–µ—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω—É—é –ª–∏–Ω–∏—é –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏
		.text("–ù–µ—Ç, –æ—Ç–∫–∞–∑–∞—Ç—å", `reject_${fromUserId}`)

	// –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
	await ctx.api.sendMessage(
		adminId,
		`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${fromUserId}: "${messageText}"`,
		{
			reply_markup: inlineKeyboard,
		},
	)
})


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
async function saveMessageToDb(messageText) {
	// –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞—à –∫–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	// –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è Supabase —ç—Ç–æ –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–∞–∫:
	const { data, error } = await supabase
		.from("tgBotMsg")
		.insert([{ message: messageText }])

	if (error) {
		throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
	}

	return data
}


// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
bot.callbackQuery(/^accept_|reject_/, async ctx => {
	const action = ctx.callbackQuery.data.startsWith("accept_") ? "–ø—Ä–∏–Ω—è—Ç–æ" : "–æ—Ç–∫–∞–∑–∞–Ω–æ"
	const userId = ctx.callbackQuery.data.split("_")[1]
	const messageText = ctx.callbackQuery.message.text.split(":").slice(1).join(":").trim() // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

	const messageId = ctx.callbackQuery.message.message_id // ID —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
	const chatId = ctx.callbackQuery.message.chat.id // ID —á–∞—Ç–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ

	if (action === "–ø—Ä–∏–Ω—è—Ç–æ") {
		try {
			// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
      // await saveMessageToDb(messageText)

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
			await ctx.api.sendMessage(groupId, `–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ${messageText}`)

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
			await ctx.answerCallbackQuery("–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
			await ctx.api.sendMessage(
				userId,
				"–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É.",
      )
      await ctx.api.deleteMessage(chatId, messageId)
		} catch (error) {
			console.error("–û—à–∏–±–∫–∞:", error)
			await ctx.answerCallbackQuery("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.")
		}
	} else {
		// –î–ª—è –æ—Ç–∫–∞–∑–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
		await ctx.answerCallbackQuery("–í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
		await ctx.api.sendMessage(userId, "–í–∞—à –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
	}
})

bot.callbackQuery("back_main", async ctx => {
	await ctx.answerCallbackQuery()
	const keyboard = buildMainMenuKeyboard()
	ctx.editMessageText(mainMsg, {
		reply_markup: keyboard,
		parse_mode: "Markdown",
	})
})

bot.on("callback_query", async ctx => {
	const callbackData = ctx.callbackQuery.data
	await ctx.answerCallbackQuery() // –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ callback-–∑–∞–ø—Ä–æ—Å—ã

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	if (categoryTexts[callbackData]) {
		const backKeyboard = new InlineKeyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "back_main")
		await ctx.editMessageText(categoryTexts[callbackData], {
			reply_markup: backKeyboard,
			parse_mode: "Markdown",
		})
	} else if (callbackData === "back_main") {
		// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
		// –ó–¥–µ—Å—å –≤–∞—à –∫–æ–¥ –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
	} else {
		await ctx.reply("–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
	}
})

export default webhookCallback(bot, "https")
